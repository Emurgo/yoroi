/**
 * Flowtype definitions for parsers
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.21.0
 */

import { z } from "zod";
declare export var parseBoolean: (data: mixed) => boolean | void;
declare export var parseString: (data: mixed) => string | void;
declare export var parseSafe: (text: any) => mixed;
declare export var isBoolean: (data: mixed) => boolean;
declare export var isString: (data: mixed) => boolean;
declare export var isNonNullable: <T>(data: T | null | void) => boolean;
declare export var isNumber: (data: mixed) => boolean;
declare export var createTypeGuardFromSchema: <T>(
  schema: z.ZodType<T, z.ZodTypeDef, T>
) => (data: mixed) => boolean;
declare export var isRecord: (data: mixed) => boolean;
declare export var isArray: (data: mixed) => boolean;
declare export function isArrayOfType<T>(
  data: mixed,
  predicate: (data: mixed) => boolean
): boolean;
