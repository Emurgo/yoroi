fastlane_require 'dotenv'

# iOS
XC_PROJECT="./ios/yoroi.xcodeproj"
XC_WORKSPACE="./ios/yoroi.xcworkspace"
PLIST="yoroi/Info.plist"

before_all do |lane|
  Dotenv.overload '../.env'
  environment = lane_context[SharedValues::ENVIRONMENT]
  unless environment.nil?
      puts "Load .env file of #{environment}"
      Dotenv.overload '../.env.' + environment
  end
end

platform :ios do
  desc "iOS"

  lane :ios do

    update_app_identifier(
      xcodeproj: XC_PROJECT, 
      plist_path: PLIST, 
      app_identifier: ENV["APP_STORE_BUNDLE_ID"] 
    )

    update_info_plist(
      xcodeproj: XC_PROJECT,
      plist_path: PLIST,
      display_name: ENV["APP_NAME"],
    )

    match(app_identifier: ENV["APP_STORE_BUNDLE_ID"], type: "appstore")
    api_key = app_store_connect_api_key(
      key_id: ENV["APP_STORE_KEY_ID"],
      issuer_id: ENV["APP_STORE_ISSUER_ID"],
      key_filepath: ENV["APP_STORE_KEY_PATH"],
      duration: 1200, 
      in_house: false
    )

    increment_build_number(xcodeproj: XC_PROJECT)
    
    begin
      gym(
        scheme: "yoroi", 
        workspace: XC_WORKSPACE,
        silent: true,
        include_bitcode: false,
        include_symbols: true,
        clean: true,
        xcargs: `-UseNewBuildSystem=YES`,
        output_directory: "./ios",
        output_name: "yoroi.ipa",
        export_options: {
          method: "app-store",
          signingStyle: "automatic"
        },
      )
    rescue => e
      xcode_log_path = '~/Library/Logs/gym/yoroi-yoroi.log'
      p "iOS build failed -> #{xcode_log_path}"
      sh "cat #{xcode_log_path}"

      raise 'iOS build failed.'
    end

    upload_to_testflight(api_key: api_key, app_identifier: ENV["APP_STORE_BUNDLE_ID"], skip_waiting_for_build_processing: true)
  end

end

platform :android do

  desc "Android"
  
  lane :android do

    gradle(
      task: "clean",
      project_dir: "android/"
    )

    gradle(
      task: "assemble",
      build_type: "Release",
      print_command: ENV["DEBUG"],
      print_command_output: ENV["DEBUG"],
      properties: {
        "android.injected.signing.store.file" => ENV["ANDROID_KEYSTORE_PATH"],
        "android.injected.signing.store.password" => ENV["ANDROID_KEYSTORE_PASS"],
        "android.injected.signing.key.password" => ENV["ANDROID_KEY_PASS"],
        "android.injected.signing.key.alias" => ENV["ANDROID_KEYSTORE_ALIAS"],
      },
      project_dir: 'android/'
    )

    upload_to_play_store(
      track: ENV["ANDROID_TRACK"],
      package_name: ENV["ANDROID_PACKAGE_NAME"],
      json_key: ENV["ANDROID_SERVICE_KEY_PATH"],
    )

  end

end