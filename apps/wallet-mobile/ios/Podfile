require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")

# new version run node
# require Pod::Executable.execute_command('node', ['-p',
#   'require.resolve(
#     "react-native/scripts/react_native_pods.rb",
#     {paths: [process.argv[1]]},
#   )', __dir__]).strip

require_relative '../../../node_modules/react-native/scripts/react_native_pods'
require_relative '../../../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, min_ios_version_supported
prepare_react_native_project!

# If you are using a `react-native-flipper` your iOS build will fail when `NO_FLIPPER=1` is set.
# because `react-native-flipper` depends on (FlipperKit,...) that will be excluded
#
# To fix this you can also exclude `react-native-flipper` using a `react-native.config.js`
# ```js
# module.exports = {
#   dependencies: {
#     ...(process.env.NO_FLIPPER ? { 'react-native-flipper': { platforms: { ios: null } } } : {}),
# ```
# flipper_config = ENV['NO_FLIPPER'] == "1" ? FlipperConfiguration.disabled : FlipperConfiguration.enabled
flipper_config = FlipperConfiguration.disabled

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'yoroi' do
  use_expo_modules!
  post_integrate do |installer|
    begin
      expo_patch_react_imports!(installer)
    rescue => e
      Pod::UI.warn e
    end
  end
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # Enables Flipper.
    #
    # Note that if you have use_frameworks! enabled, Flipper will not work and
    # you should disable the next line.
    :flipper_configuration => flipper_config,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  permissions_path = '../../../node_modules/react-native-permissions/ios'
  pod 'Permission-Camera', :path => "#{permissions_path}/Camera"
  pod 'Permission-BluetoothPeripheral', :path => "#{permissions_path}/BluetoothPeripheral"
  pod 'Permission-FaceID', :path => "#{permissions_path}/FaceID"
  pod 'Permission-LocationAccuracy', :path => "#{permissions_path}/LocationAccuracy"
  pod 'Permission-LocationAlways', :path => "#{permissions_path}/LocationAlways"
  pod 'Permission-LocationWhenInUse', :path => "#{permissions_path}/LocationWhenInUse"

  target 'yoroiTests' do
    inherit! :complete
    # Pods for testing
  end

  target 'nightly' do
    inherit! :complete
    # Pods for testing
  end

  post_install do |installer|
    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
    react_native_post_install(
      installer,
      # new version consume from config
      # config[:reactNativePath],
      react_native_path = '../../../node_modules/react-native',
      # Set `mac_catalyst_enabled` to `true` in order to apply patches
      # necessary for Mac Catalyst builds
      :mac_catalyst_enabled => false
    )
    # __apply_Xcode_12_5_M1_post_installdd_workaround(installer)

    # Get the development team id from the main project / set env file
    dev_team_id = ""
    project = installer.aggregate_targets[0].user_project
    ENVFILES = {
      'yoroi' => {
        'Debug' => '$(PODS_ROOT)/../../.env',
        'Release' => '$(PODS_ROOT)/../../.env.production',
      },
      'nightly' => {
        'Debug' => '$(PODS_ROOT)/../../.env.nightly',
        'Release' => '$(PODS_ROOT)/../../.env.nightly',
      },
      'yoroiTests' => {
        'Debug' => '$(PODS_ROOT)/../../.env',
        'Release' => '$(PODS_ROOT)/../../.env',
      },
    }

    project.targets.each do |target|
      target.build_configurations.each do |config|
        puts "Set development team for target #{target.name} #{dev_team_id}"
        if dev_team_id.empty? and !config.build_settings['DEVELOPMENT_TEAM'].nil?
          dev_team_id = config.build_settings['DEVELOPMENT_TEAM']
        end

        envfile = ENVFILES[target.name][config.name]
        if envfile
          puts "Set the enviroment file to #{envfile} for target #{target.name} and config #{config.name}"
          config.build_settings['ENVFILE'] = envfile
        end
      end
    end

    # Reconfigure the pods, update deployment target and signing settings
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        if target.respond_to?(:product_type) and target.product_type == 'com.apple.product-type.bundle'
          config.build_settings['DEVELOPMENT_TEAM'] = dev_team_id
          config.build_settings['CODE_SIGN_IDENTITY'] = 'Apple Distribution';
          config.build_settings['CODE_SIGN_STYLE'] = 'Manual';
        end if
        #temp workaround need to specify IPHONEOS_DEPLOYMENT_TARGET globally
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.4';
       #config.build_settings.delete 'IPHONEOS_DEPLOYMENT_TARGET'
      end
    end

    # * https://github.com/facebook/react-native/issues/31941
    installer.aggregate_targets.each do |aggregate_target|
      aggregate_target.user_project.native_targets.each do |target|
        target.build_configurations.each do |config|
          config.build_settings['LIBRARY_SEARCH_PATHS'] = ['$(SDKROOT)/usr/lib/swift', '$(inherited)']
        end
      end
      aggregate_target.user_project.save
    end
  end
end
